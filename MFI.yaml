# @ConfigName                       自用Clash Meta配置文件 https://github.com/Toperlock/Clash/blob/main/MFI.yaml
# @Date                             2023-07-24 17:44

###建立锚点

# 策略组引用相关
pr: &pr {type: select, proxies: [DIRECT, 🚀 手动切换, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 狮城节点,  🇰🇷 韩国节点, ✈️ 其他节点]}

# 订阅更新和延迟测试相关
p: &p {type: http, interval: 86400, health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800}}

# 自动选择相关
auto: &auto {type: url-test, lazy: true, url: http://www.gstatic.com/generate_204, interval: 900, use: [provider1]}

# 手动选择相关
use: &use {type: select, use: [provider1]}

# classical规则相关
c: &c {type: http, behavior: classical, interval: 86400}

# domain规则相关
d: &d {type: http, behavior: domain, interval: 86400}

# ipcidr规则相关
i: &i {type: http, behavior: ipcidr, interval: 86400}

###结束


# url 里填写自己的订阅,名称不能重复
# Meta支持机场通用订阅
# 多个订阅就按照格式再添加一个“provider2”，path路径需不一致，可以写成“tmp2.yaml”
proxy-providers:
  provider1:
    <<: *p
    url: "" 
    path: ./proxy_providers/tmp.yaml

#system-proxy: true                 # 开启HTTP代理 比纯tun节省资源
mixed-port: 7890                    # 混合端口 HTTP和SOCKS5用一个端口
geodata-mode: true                  #【Meta专属】使用geoip.dat数据库(默认：false使用mmdb数据库)
tcp-concurrent: false               #【Meta专属】TCP 并发连接所有 IP, 将使用最快握手的 TCP
allow-lan: true                     # 允许局域网的连接（可用来共享代理）
bind-address: "*"                   # 仅在将allow-lan设置为true时适用
                                    # #"*": 绑定所有IP地址
find-process-mode: strict           # 匹配所有进程（always/strict/off）
ipv6: false                         # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
mode: rule                          # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info                     # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
external-controller: 0.0.0.0:9090   # 外部控制器,可以使用 RESTful API 来控制你的 clash 内核
secret: 'toper'                     # 自定义设置API密码，进行 API 鉴权。这里密码是 toper
global-client-fingerprint: chrome   # 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
                                    # 可选： "chrome","firefox","safari","ios","random","none" options.
unified-delay: false                # 统一延迟，更换延迟计算方式，去除握手等额外延迟

geox-url:                           # 自定义 geodata url, 需要有代理的前提才能下载geoip和geosite
  geoip: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat"
  geosite: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
  #mmdb: "https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"

profile:
  store-selected: true              # 存储 select 选择记录
  store-fake-ip: true               # 持久化 fake-ip

sniffer:                            # 嗅探域名 可选配置
  enable: true
  parse-pure-ip: true               # 是否使用嗅探结果作为实际访问，默认 true
  sniff:
    TLS:                            # TLS 默认嗅探 443
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
  force-domain:                     # 强制对此域名进行嗅探
    - "+.netflix.com"
    - "+.nflxvideo.net"
    - "+.amazonaws.com"
    - "+.media.dssott.com"
    - 'google.com'
  sniffing:                         # 需要嗅探协议
    - tls
    - http

tun:                                # Tun 配置
  enable: true
  stack: system                     # 可选： system/gvisor/lwip
                                    # tun模式堆栈,如无使用问题,建议使用 system 栈;
                                    # MacOS 用户推荐 gvisor栈,IOS无法使用system栈
  dns-hijack:                       # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
    - 'any:53'
# strict_route: true                # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  auto-route: true                  # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-detect-interface: true       # 自动识别出口网卡

dns:
  enable: true                      # 关闭将使用系统 DNS
  listen: 0.0.0.0:53                # DNS监听地址
  ipv6: false                       # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip            # 模式：redir-host或fake-ip
  fake-ip-range: 198.18.0.1/16      # Fake-IP解析地址池
  fake-ip-filter:                   # fake ip 白名单列表'以下地址不会下发fakeip映射用于连接
    - '*.lan' 
    - 'cable.auth.com' 
    - '*.msftconnecttest.com' 
    - '*.msftncsi.com' 
    - 'network-test.debian.org'
    - 'detectportal.firefox.com' 
    - 'resolver1.opendns.com' 
    - '*.srv.nintendo.net' 
    - '*.stun.playstation.net' 
    - 'xbox.*.microsoft.com' 
    - '*.xboxlive.com' 
    - 'stun.*' 
    - 'global.turn.twilio.com' 
    - 'global.stun.twilio.com' 
    - 'localhost.*.qq.com' 
    - 'localhost.*.weixin.qq.com' 
    - '*.logon.battlenet.com.cn' 
    - '*.logon.battle.net' 
    - '*.blzstatic.cn' 
    - 'music.163.com' 
    - '*.music.163.com' 
    - '*.126.net' 
    - 'musicapi.taihe.com' 
    - 'music.taihe.com' 
    - 'songsearch.kugou.com' 
    - 'trackercdn.kugou.com' 
    - '*.kuwo.cn' 
    - 'api-jooxtt.sanook.com' 
    - 'api.joox.com' 
    - 'joox.com' 
    - 'y.qq.com' 
    - '*.y.qq.com' 
    - 'streamoc.music.tc.qq.com' 
    - 'mobileoc.music.tc.qq.com' 
    - 'isure.stream.qqmusic.qq.com' 
    - 'dl.stream.qqmusic.qq.com' 
    - 'aqqmusic.tc.qq.com' 
    - 'amobile.music.tc.qq.com' 
    - '*.xiami.com' 
    - '*.music.migu.cn' 
    - 'music.migu.cn' 
    - 'proxy.golang.org' 
    - '*.mcdn.bilivideo.cn' 
    - '*.cmpassport.com' 
    - 'id6.me' 
    - 'open.e.189.cn' 
    - 'mdn.open.wo.cn' 
    - 'opencloud.wostore.cn' 
    - 'auth.wosms.cn' 
    - '*.jegotrip.com.cn' 
    - '*.icitymobile.mobi' 
    - '*.pingan.com.cn' 
    - '*.cmbchina.com' 
    - 'pool.ntp.org' 
    - '*.pool.ntp.org' 
    - 'ntp.*.com' 
    - 'time.*.com' 
    - 'ntp?.*.com' 
    - 'time?.*.com' 
    - 'time.*.gov' 
    - 'time.*.edu.cn' 
    - '*.ntp.org.cn' 
    - 'PDC._msDCS.*.*' 
    - 'DC._msDCS.*.*' 
    - 'GC._msDCS.*.*'
  default-nameserver:               # 解析非IP的dns用的dns服务器,只支持纯IP
    - 119.29.29.29
    - 223.5.5.5
  nameserver:                       # 默认DNS服务器，支持udp/tcp/dot/doh/doq
    - 119.29.29.29
    - https://1.12.12.12/dns-query  # 腾讯阿里DoH2
    - https://223.5.5.5/dns-query
  fallback:                         # 解析国外域名的DNS服务器
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  fallback-filter:                  # 配置 fallback 使用条件
    geoip: true                     # 配置是否使用 geoip
    geoip-code: CN                  # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
    geosite:                        # 配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
      - gfw
      - geolocation-!cn
    ipcidr:                         # 在这个网段内的 IP 地址会被考虑为被污染的 IP
      - 240.0.0.0/4

proxies: null

proxy-groups:
# 分流分组
  - {name: 🚀 手动切换, <<: *use}
  - {name: ♻️ 自动选择, <<: *auto}
  - {name: 🛑 AdBlock, type: select, proxies: [REJECT, DIRECT]}
  - {name: 🤖 OpenAI, <<: *pr}
  - {name: 🌌 谷歌服务, <<: *pr}
  - {name: 📟 电报消息, <<: *pr}
  - {name: 🐦 推特消息, <<: *pr}
  - {name: 👤 Facebook, <<: *pr}
  - {name: 🛍️ 亚马逊, <<: *pr}
  - {name: 🍎 苹果服务, <<: *pr}
  - {name: 🧩 微软服务, <<: *pr}
  - {name: 📺 哔哩哔哩, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点]}
  - {name: 🌏 国外网站, <<: *pr}
  - {name: 🎬 国际媒体, <<: *pr}
  - {name: 🎮 游戏平台, <<: *pr}
  - {name: 🌏 国内网站, type: select, proxies: [DIRECT, 🚀 手动切换]}
  - {name: 🐟 兜底分流, <<: *pr}
# 节点地区分组
  - {name: 🇭🇰 香港节点, <<: *use, filter: "港|HK|(?i)Hong"}
  - {name: 🇨🇳 台湾节点, <<: *use, filter: "台|湾|TW|(?i)Taiwan"}
  - {name: 🇺🇸 美国节点, <<: *use, filter: "美|(?i)States|American"}
  - {name: 🇯🇵 日本节点, <<: *use, filter: "日本|东京|JP|(?i)Japan"}
  - {name: 🇸🇬 狮城节点, <<: *use, filter: "新加|坡|SG|(?i)Singapore"}
  - {name: 🇰🇷 韩国节点, <<: *use, filter: "韩|韓|首尔|KR|(?i)Korea"}
  - {name: ✈️ 其他节点, <<: *use, filter: "^[^香台美本坡韩]*$"}

rules:
  - GEOSITE,category-ads-all,🛑 AdBlock
  - GEOSITE,private,DIRECT
  - GEOIP,private,DIRECT
  - GEOSITE,category-games,🎮 游戏平台
  - GEOSITE,openai,🤖 OpenAI
  - GEOSITE,youtube,🌌 谷歌服务
  - GEOIP,netflix,🎬 国际媒体
  - GEOSITE,netflix,🎬 国际媒体
  - GEOSITE,hbo,🎬 国际媒体
  - GEOSITE,disney,🎬 国际媒体
  - GEOSITE,primevideo,🎬 国际媒体
  - GEOSITE,github,🌌 谷歌服务
  - GEOSITE,bilibili,📺 哔哩哔哩
  - GEOSITE,telegram,📟 电报消息
  - GEOIP,telegram,📟 电报消息
  - GEOIP,twitter,🐦 推特消息
  - GEOSITE,twitter,🐦 推特消息
  - GEOIP,facebook,👤 Facebook
  - GEOSITE,facebook,👤 Facebook
  - GEOSITE,instagram,👤 Facebook
  - GEOSITE,amazon,🛍️ 亚马逊
  - GEOSITE,apple,🍎 苹果服务
  - GEOSITE,microsoft,🧩 微软服务
  - GEOIP,google,🌌 谷歌服务
  - GEOSITE,google,🌌 谷歌服务
  - GEOSITE,bilibili,📺 哔哩哔哩
  - GEOSITE,geolocation-!cn,🌏 国外网站
  - GEOSITE,cn,🌏 国内网站
  - GEOIP,CN,🌏 国内网站
  - MATCH,🐟 兜底分流
